{"version":3,"sources":["components/Header.jsx","components/Competitor.jsx","components/Matchup.jsx","components/Round.jsx","util/dimensions.js","components/Quadrant.jsx","components/Board.jsx","components/Semifinal.jsx","components/Final.jsx","components/ChampionArea.jsx","components/LastRoundsArea.jsx","components/Footer.jsx","components/App.jsx","index.js"],"names":["Header","className","Competitor","props","useState","titleEntered","setTitleEntered","newTitle","setNewTitle","bandEntered","setBandEntered","newBand","setNewBand","winnerDataAdded","setWinnerDataAdded","setShape","top","handleTitleChange","event","newSongTitle","target","value","handleTitleClick","handleBandChange","newBandTitle","handleBandClick","handleDelete","selectedWinnerData","winnerTargetSpot","targetSpotNum","winnerTitle","winnerBand","winnerQuad","quadNum","winnerRound","roundNum","winnerMatchup","matchupNum","winnerCompetitor","competitorNum","deletedData","latestRoundWithData","roundType","onSelectedWinner","handleWinnerSelection","style","setStyle","onClick","onChange","type","placeholder","winnerDataToRender","lastRoundsDeletionData","handleDeleteButtonRendering","otherRounds","Matchup","Math","floor","passWinnerDataToRound","data","onWinnerSelected","matchupHeight","marginValue","height","winnerDataToSend","Round","numMatchups","startingNum","i","pow","push","margins","marginForThisRound","passWinnerDataToQuadrant","onWinnerDataReceived","round","paddingValue","calculatePadding","map","matchup","Quadrant","receivedWinnerData","setReceivedWinnerData","sendWinnerDataToNextRound","onLastRoundsDataReceived","roundSide","quadSide","lastRoundsData","Board","lastRoundsDataHandler","onLastRoundsDataArrived","Semifinal","handleLastRoundsWinner","onLastRoundsWinnerDataReceived","Final","finalData","ChampionArea","championData","championReceived","deletedChampionData","onChampionDelete","LastRoundsArea","finalWinnerData","setFinalWinnerData","onSemifinalDataReceived","Footer","currentYear","Date","getFullYear","App","setLastRoundsData","html2canvas","document","body","then","canvas","uri","filename","link","createElement","download","href","appendChild","click","removeChild","window","open","saveAs","toDataURL","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a8091ab5.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header>\r\n            <div className=\"header-background\">\r\n                <h1 className=\"main-title\">Bracket Game Maker</h1>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, { useState } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction Competitor(props) {\r\n    const [titleEntered, setTitleEntered] = useState(false);\r\n    const [newTitle, setNewTitle] = useState(\"\");\r\n    const [bandEntered, setBandEntered] = useState(false);\r\n    const [newBand, setNewBand] = useState(\"\");\r\n    const [winnerDataAdded, setWinnerDataAdded] = useState(false);\r\n\r\n    function setStyle() {\r\n        if (props.top === \"true\") {\r\n            return {\"borderBottomColor\": \"black\", \"borderBottomStyle\": \"solid\", \"borderBottomWidth\": 1}\r\n        }\r\n    }\r\n\r\n    function setShape() {\r\n        if (props.top === \"true\") {\r\n            return {\"borderRadius\": \"10px 10px 0 0\"};\r\n        } else {\r\n            return {\"borderRadius\": \"0 0 10px 10px\"};\r\n        }\r\n    }\r\n\r\n    function handleTitleChange(event) {\r\n        const newSongTitle = event.target.value;\r\n        setNewTitle(newSongTitle);\r\n    }\r\n\r\n    function handleTitleClick() {\r\n        if (!titleEntered) {\r\n            setTitleEntered(true);\r\n        } else {\r\n            setTitleEntered(false);\r\n        }\r\n    }\r\n\r\n    function handleBandChange(event) {\r\n        const newBandTitle = event.target.value;\r\n        setNewBand(newBandTitle);\r\n    }\r\n\r\n    function handleBandClick() {\r\n        if (!bandEntered) {\r\n            setBandEntered(true);\r\n        } else {\r\n            setBandEntered(false);\r\n        }\r\n    }\r\n\r\n    function handleDelete() {\r\n        const selectedWinnerData = {\r\n            winnerTargetSpot: props.targetSpotNum,\r\n            winnerTitle: newTitle,\r\n            winnerBand: newBand,\r\n            winnerQuad: props.quadNum,\r\n            winnerRound: props.roundNum,\r\n            winnerMatchup: props.matchupNum,\r\n            winnerCompetitor: props.competitorNum,\r\n            deletedData: true,\r\n            latestRoundWithData: (props.roundNum - 1)\r\n        };\r\n\r\n        if (props.roundNum < 4) {\r\n            selectedWinnerData.roundType = \"lower-round\";\r\n        } else if (props.roundNum === 4) {\r\n            selectedWinnerData.roundType = \"round-4\";\r\n        } else {\r\n            selectedWinnerData.roundType = \"late-round\"\r\n        }\r\n\r\n        props.onSelectedWinner(selectedWinnerData);\r\n\r\n        setWinnerDataAdded(false);\r\n    }\r\n\r\n    function handleWinnerSelection() {\r\n        const selectedWinnerData = {\r\n            winnerTargetSpot: props.targetSpotNum,\r\n            winnerTitle: newTitle,\r\n            winnerBand: newBand,\r\n            winnerQuad: props.quadNum,\r\n            winnerRound: props.roundNum,\r\n            winnerMatchup: props.matchupNum,\r\n            winnerCompetitor: props.competitorNum,\r\n            latestRoundWithData: (props.roundNum + 1)\r\n        };\r\n\r\n        if (props.roundNum < 4) {\r\n            selectedWinnerData.roundType = \"lower-round\";\r\n        } else if (props.roundNum === 4) {\r\n            selectedWinnerData.roundType = \"round-4\";\r\n        } else {\r\n            selectedWinnerData.roundType = \"late-round\"\r\n        }\r\n        \r\n        props.onSelectedWinner(selectedWinnerData);\r\n    }\r\n\r\n    function handleDeleteButtonRendering() {\r\n        if (props.winnerDataToRender.latestRoundWithData === props.roundNum || props.lastRoundsDeletionData.latestRoundWithData === props.roundNum) {\r\n            return (\r\n                <button className=\"delete-button\" onClick={handleDelete}>\r\n                    <DeleteIcon style={{\"fontSize\": 18}} />\r\n                </button>\r\n            );\r\n        }\r\n    }\r\n\r\n    function firstRoundForms() {\r\n        if (!titleEntered && !bandEntered) {\r\n            return (\r\n                <table className=\"competitor-table\" style={setShape()}>\r\n                    <tr className=\"table-row-unfinished\">\r\n                        <td className=\"table-data-left\">\r\n                            <input onChange={handleTitleChange} value={newTitle} type=\"text\" placeholder=\" Name/title...\" />\r\n                        </td>\r\n                        <td className=\"table-data-right\">\r\n                            <button className=\"add-button\" onClick={handleTitleClick}><AddIcon style={{\"fontSize\": 18}} /></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"table-row-unfinished\">\r\n                        <td className=\"table-data-left\">\r\n                            <input onChange={handleBandChange} value={newBand} type=\"text\" placeholder=\" Band/description...\" />\r\n                        </td>\r\n                        <td className=\"table-data-right\">\r\n                            <button className=\"add-button\" onClick={handleBandClick}><AddIcon style={{\"fontSize\": 18}} /></button>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            );\r\n        } else if (titleEntered && !bandEntered) {\r\n            return (\r\n                <table className=\"competitor-table\" style={setShape()}>\r\n                    <tr className=\"table-row-unfinished\">\r\n                        <td className=\"table-data-left\">\r\n                            <p className=\"song-title-text\">{newTitle}</p>\r\n                        </td>\r\n                        <td className=\"table-data-right\">\r\n                            <button className=\"edit-button\" onClick={handleTitleClick}><EditIcon style={{\"fontSize\": 15}} /></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"table-row-unfinished\">\r\n                        <td className=\"table-data-left\">\r\n                            <input onChange={handleBandChange} value={newBand} type=\"text\" placeholder=\" Band/description...\" />\r\n                        </td>\r\n                        <td className=\"table-data-right\">\r\n                            <button className=\"add-button\" onClick={handleBandClick}><AddIcon style={{\"fontSize\": 18}} /></button>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            );\r\n        } else if (!titleEntered && bandEntered) {\r\n            return (\r\n                <table className=\"competitor-table\" style={setShape()}>\r\n                    <tr className=\"table-row-unfinished\">\r\n                        <td className=\"table-data-left\">\r\n                            <input onChange={handleTitleChange} value={newTitle} type=\"text\" placeholder=\" Name/title...\" />\r\n                        </td>\r\n                        <td className=\"table-data-right\">\r\n                            <button className=\"add-button\" onClick={handleTitleClick}><AddIcon style={{\"fontSize\": 18}} /></button>\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"table-row-unfinished\">\r\n                        <td className=\"table-data-left\">\r\n                            <p className=\"band-name-text\">{newBand}</p>\r\n                        </td>\r\n                        <td className=\"table-data-right\">\r\n                            <button className=\"edit-button\" onClick={handleBandClick}><EditIcon style={{\"fontSize\": 15}} /></button>\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            );\r\n        } else if (titleEntered && bandEntered) {\r\n            return (\r\n                <table className=\"competitor-table table-finished\" style={setShape()} onClick={handleWinnerSelection}>\r\n                    <tr className=\"table-row-unfinished\">\r\n                        <td className=\"table-data-left\">\r\n                        <p className=\"song-title-text\">{newTitle}</p>\r\n                        </td>\r\n                        <td className=\"table-data-right\">\r\n                            {(props.winnerDataToRender.latestRoundWithData === 1) &&\r\n                                <button className=\"edit-button\" onClick={handleTitleClick}>\r\n                                    <EditIcon style={{\"fontSize\": 15}} />\r\n                                </button>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                    <tr className=\"table-row-unfinished\">\r\n                        <td className=\"table-data-left\">\r\n                            <p className=\"band-name-text\">{newBand}</p>\r\n                        </td>\r\n                        <td className=\"table-data-right\">\r\n                            {(props.winnerDataToRender.latestRoundWithData === 1) &&\r\n                                <button className=\"edit-button\" onClick={handleBandClick}>\r\n                                    <EditIcon style={{\"fontSize\": 15}} />\r\n                                </button>\r\n                            }\r\n                        </td>\r\n                    </tr>\r\n                </table>\r\n            );\r\n        }\r\n    }\r\n\r\n    function otherRounds() {\r\n        if (props.competitorNum === props.winnerDataToRender.winnerTargetSpot && !props.winnerDataToRender.deletedData) {\r\n            if (!winnerDataAdded) {\r\n                setNewTitle(props.winnerDataToRender.winnerTitle);\r\n                setNewBand(props.winnerDataToRender.winnerBand);\r\n                setWinnerDataAdded(true);\r\n            }\r\n        }\r\n\r\n        if (winnerDataAdded) {\r\n            return (\r\n                <div className=\"not-first-round-container\">\r\n                    <table className=\"table-not-first-round\" style={setShape()} onClick={handleWinnerSelection}>\r\n                        <tr>\r\n                            <td>\r\n                                <p className=\"song-title-text\">\r\n                                    {newTitle}\r\n                                </p>\r\n                            </td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>\r\n                                <p className=\"band-name-text\">\r\n                                    {newBand}\r\n                                </p>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                    {handleDeleteButtonRendering()}\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"competitor\" style={setStyle()}>\r\n            {(props.roundNum === 1) ? firstRoundForms() : otherRounds()}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Competitor;","import React from \"react\";\r\nimport Competitor from \"./Competitor\";\r\n\r\nfunction Matchup(props) {\r\n    function setStyle() {\r\n        return {\"height\": props.matchupHeight, \"marginBottom\": props.marginValue}\r\n    }\r\n\r\n    const competitorNum = props.matchupNum * 2;\r\n\r\n    const targetSpotNum = Math.floor(((competitorNum - 1) * 0.5) + 64.5);\r\n\r\n    function passWinnerDataToRound(data) {\r\n        props.onWinnerSelected(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"matchup\" style={setStyle()}>\r\n            <Competitor\r\n                top=\"true\"\r\n                quadNum={props.quadNum}\r\n                roundNum={props.roundNum}\r\n                matchupNum={props.matchupNum}\r\n                height={props.matchupHeight}\r\n                competitorNum={competitorNum - 1}\r\n                targetSpotNum={targetSpotNum}\r\n                onSelectedWinner={passWinnerDataToRound}\r\n                winnerDataToRender={props.winnerDataToSend}\r\n                lastRoundsDeletionData={props.lastRoundsDeletionData}\r\n            />\r\n            <Competitor\r\n                top=\"false\"\r\n                quadNum={props.quadNum}\r\n                roundNum={props.roundNum}\r\n                matchupNum={props.matchupNum}\r\n                height={props.matchupHeight}\r\n                competitorNum={competitorNum}\r\n                targetSpotNum={targetSpotNum}\r\n                onSelectedWinner={passWinnerDataToRound}\r\n                winnerDataToRender={props.winnerDataToSend}\r\n                lastRoundsDeletionData={props.lastRoundsDeletionData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Matchup;","import React from \"react\";\r\nimport Matchup from \"./Matchup\";\r\nimport { matchupBoxHeight, firstRoundBoxesMargin } from \"../util/dimensions\";\r\n\r\nfunction Round(props) {\r\n    let numMatchups =[];\r\n\r\n    // Calculate appropriate numbering for this round's matchups\r\n    let startingNum = 1;\r\n    switch (props.quadNum) {\r\n        case 1:\r\n            if (props.roundNum === 1) {\r\n                startingNum = 1;\r\n            } else if (props.roundNum === 2) {\r\n                startingNum = 33;\r\n            } else if (props.roundNum === 3) {\r\n                startingNum = 49;\r\n            } else if (props.roundNum === 4) {\r\n                startingNum = 57;\r\n            }\r\n            break;\r\n        case 2:\r\n            if (props.roundNum === 1) {\r\n                startingNum = 9;\r\n            } else if (props.roundNum === 2) {\r\n                startingNum = 37;\r\n            } else if (props.roundNum === 3) {\r\n                startingNum = 51;\r\n            } else if (props.roundNum === 4) {\r\n                startingNum = 58;\r\n            }\r\n            break;\r\n        case 3:\r\n            if (props.roundNum === 1) {\r\n                startingNum = 17;\r\n            } else if (props.roundNum === 2) {\r\n                startingNum = 41;\r\n            } else if (props.roundNum === 3) {\r\n                startingNum = 53;\r\n            } else if (props.roundNum === 4) {\r\n                startingNum = 59;\r\n            }\r\n            break;\r\n        case 4:\r\n            if (props.roundNum === 1) {\r\n                startingNum = 25;\r\n            } else if (props.roundNum === 2) {\r\n                startingNum = 45;\r\n            } else if (props.roundNum === 3) {\r\n                startingNum = 55;\r\n            } else if (props.roundNum === 4) {\r\n                startingNum = 60;\r\n            }\r\n            break;\r\n        default:\r\n            startingNum = 1;\r\n    }\r\n\r\n    // Create appropriately sized arrays from which to map the number of matchups per round:\r\n    for (var i = startingNum; i<startingNum + (8/Math.pow(2, props.roundNum - 1)); i++) {\r\n        numMatchups.push(i);\r\n    }\r\n\r\n    // Enter global values here, other dimensions will adjust:\r\n    const matchupHeight = matchupBoxHeight;\r\n    const firstRoundMargin = firstRoundBoxesMargin;\r\n    const margins = [firstRoundMargin];\r\n\r\n    //Calculations of dimensions based on global values above:\r\n    const secondRoundPadding = (0.5 * matchupHeight) + (0.5 * firstRoundMargin);\r\n    const secondRoundMargin = (1.5 * matchupHeight) + (2.5 * firstRoundMargin) - secondRoundPadding;\r\n    margins.push(secondRoundMargin);\r\n    const thirdRoundPadding = (0.5 * matchupHeight) + (0.5 * secondRoundMargin) + secondRoundPadding;\r\n    const thirdRoundMargin = (1.5 * matchupHeight) + (2 * secondRoundMargin) + (1.5 * secondRoundPadding) - thirdRoundPadding;\r\n    margins.push(thirdRoundMargin);\r\n    const fourthRoundPadding = (0.5 * matchupHeight) + (0.5 * thirdRoundMargin) + thirdRoundPadding;\r\n    const fourthRoundMargin = 0;\r\n    margins.push(fourthRoundMargin);\r\n\r\n    const marginForThisRound = margins[props.roundNum - 1];\r\n\r\n    function calculatePadding(round) {\r\n        let paddingValue = 0;\r\n\r\n        switch (round) {\r\n            case 1:\r\n                paddingValue = 0;\r\n                break;\r\n            case 2:\r\n                paddingValue = secondRoundPadding;\r\n                break;\r\n            case 3:\r\n                paddingValue = thirdRoundPadding;\r\n                break;\r\n            case 4:\r\n                paddingValue = fourthRoundPadding;\r\n                break;\r\n            default:\r\n                paddingValue = 0;\r\n        }\r\n\r\n        return {\"paddingTop\": paddingValue}\r\n    }\r\n\r\n    function passWinnerDataToQuadrant(data) {\r\n        props.onWinnerDataReceived(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"round\" style={calculatePadding(props.roundNum)}>\r\n            {numMatchups.map((matchup, i) => {\r\n               return (\r\n                    <Matchup\r\n                        quadNum={props.quadNum}\r\n                        roundNum={props.roundNum}\r\n                        marginValue={marginForThisRound}\r\n                        matchupHeight={matchupHeight}\r\n                        matchupNum={matchup}\r\n                        onWinnerSelected={passWinnerDataToQuadrant}\r\n                        winnerDataToSend={props.winnerDataToSend}\r\n                        lastRoundsDeletionData={props.lastRoundsDeletionData}\r\n                    />\r\n               );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Round;","const matchupBoxHeight = 120;\r\nconst firstRoundBoxesMargin = 20;\r\n\r\nexport { matchupBoxHeight, firstRoundBoxesMargin };","import React, { useState } from \"react\";\r\nimport Round from \"./Round\";\r\n\r\nfunction Quadrant(props) {\r\n    const [receivedWinnerData, setReceivedWinnerData] = useState({\r\n        winnerTitle: \"\",\r\n        winnerBand: \"\"\r\n    });\r\n\r\n    function sendWinnerDataToNextRound(data) {\r\n        if (data.deletedData) {\r\n            if (data.roundType === \"lower-round\" || data.roundType === \"round-4\") {\r\n                setReceivedWinnerData(data);\r\n            } else {\r\n                props.onLastRoundsDataReceived(data);\r\n                setReceivedWinnerData(data);\r\n            }\r\n        } else {\r\n            if (data.roundType === \"lower-round\") {\r\n                setReceivedWinnerData(data);\r\n            } else if (data.roundType === \"late-round\") {\r\n                props.onLastRoundsDataReceived(data);\r\n            } else {\r\n                props.onLastRoundsDataReceived(data);\r\n                setReceivedWinnerData(data);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"quadrant\">\r\n            <Round\r\n                roundSide={props.quadSide}\r\n                roundNum={props.quadSide === \"left\" ? 1 : 4}\r\n                quadNum={props.quadNum}\r\n                onWinnerDataReceived={sendWinnerDataToNextRound}\r\n                winnerDataToSend={receivedWinnerData}\r\n                lastRoundsDeletionData={props.lastRoundsData}\r\n            />\r\n            <Round\r\n                roundSide={props.quadSide}\r\n                roundNum={props.quadSide === \"left\" ? 2 : 3}\r\n                quadNum={props.quadNum}\r\n                onWinnerDataReceived={sendWinnerDataToNextRound}\r\n                winnerDataToSend={receivedWinnerData}\r\n                lastRoundsDeletionData={props.lastRoundsData}\r\n            />\r\n            <Round\r\n                roundSide={props.quadSide}\r\n                roundNum={props.quadSide === \"left\" ? 3 : 2}\r\n                quadNum={props.quadNum}\r\n                onWinnerDataReceived={sendWinnerDataToNextRound}\r\n                winnerDataToSend={receivedWinnerData}\r\n                lastRoundsDeletionData={props.lastRoundsData}\r\n            />\r\n            <Round\r\n                roundSide={props.quadSide}\r\n                roundNum={props.quadSide === \"left\" ? 4 : 1}\r\n                quadNum={props.quadNum}\r\n                onWinnerDataReceived={sendWinnerDataToNextRound}\r\n                winnerDataToSend={receivedWinnerData}\r\n                lastRoundsDeletionData={props.lastRoundsData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Quadrant;","import React from \"react\";\r\nimport Quadrant from \"./Quadrant\";\r\n\r\nfunction Board(props) {\r\n    function lastRoundsDataHandler(data) {\r\n        props.onLastRoundsDataArrived(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            <Quadrant\r\n                quadSide=\"left\"\r\n                quadNum={1}\r\n                onLastRoundsDataReceived={lastRoundsDataHandler}\r\n                lastRoundsData={props.lastRoundsData}\r\n            />\r\n            <Quadrant\r\n                quadSide=\"right\"\r\n                quadNum={2}\r\n                onLastRoundsDataReceived={lastRoundsDataHandler}\r\n                lastRoundsData={props.lastRoundsData}\r\n            />\r\n            <Quadrant\r\n                quadSide=\"left\"\r\n                quadNum={3}\r\n                onLastRoundsDataReceived={lastRoundsDataHandler}\r\n                lastRoundsData={props.lastRoundsData}\r\n            />\r\n            <Quadrant\r\n                quadSide=\"right\"\r\n                quadNum={4}\r\n                onLastRoundsDataReceived={lastRoundsDataHandler}\r\n                lastRoundsData={props.lastRoundsData}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport Matchup from \"./Matchup\";\r\nimport { matchupBoxHeight, firstRoundBoxesMargin } from \"../util/dimensions\";\r\n\r\nfunction Semifinal(props) {\r\n    function handleLastRoundsWinner(data) {\r\n        props.onLastRoundsWinnerDataReceived(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"semifinal-area\">\r\n            <h2 className=\"semifinal-title\">Final Four</h2>\r\n            <div className=\"semifinal-matchups-container\">\r\n                <div className=\"semifinal-individual-matchup-container\">\r\n                    <Matchup\r\n                        roundNum={5}\r\n                        marginValue={firstRoundBoxesMargin}\r\n                        matchupHeight={matchupBoxHeight}\r\n                        matchupNum={61}\r\n                        onWinnerSelected={handleLastRoundsWinner}\r\n                        winnerDataToSend={props.winnerDataToRender}\r\n                        lastRoundsDeletionData={{}}\r\n                    />\r\n                </div>\r\n                <div className=\"semifinal-individual-matchup-container\">\r\n                    <Matchup\r\n                        roundNum={5}\r\n                        marginValue={firstRoundBoxesMargin}\r\n                        matchupHeight={matchupBoxHeight}\r\n                        matchupNum={62}\r\n                        onWinnerSelected={handleLastRoundsWinner}\r\n                        winnerDataToSend={props.winnerDataToRender}\r\n                        lastRoundsDeletionData={{}}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Semifinal;","import React from \"react\";\r\nimport Matchup from \"./Matchup\";\r\nimport { matchupBoxHeight, firstRoundBoxesMargin } from \"../util/dimensions\";\r\n\r\nfunction Final(props) {\r\n    function handleFinalWinnerData(data) {\r\n        props.onLastRoundsWinnerDataReceived(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"final-area\">\r\n            <h2 className=\"final-title\">Championship Matchup</h2>\r\n            <Matchup\r\n                roundNum={6}\r\n                marginValue={firstRoundBoxesMargin}\r\n                matchupHeight={matchupBoxHeight}\r\n                matchupNum={63}\r\n                onWinnerSelected={handleFinalWinnerData}\r\n                winnerDataToSend={props.finalData}\r\n                lastRoundsDeletionData={{}}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Final;","import React from \"react\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nfunction ChampionArea(props) {\r\n    function handleChampionDelete() {\r\n        const deletedChampionData = {\r\n            winnerTargetSpot: props.targetSpotNum,\r\n            winnerTitle: props.championData.winnerTitle,\r\n            winnerBand: props.championData.winnerBand,\r\n            winnerQuad: props.quadNum,\r\n            winnerRound: props.roundNum,\r\n            winnerMatchup: props.matchupNum,\r\n            winnerCompetitor: props.competitorNum,\r\n            deletedData: true,\r\n            latestRoundWithData: (props.latestRoundWithData - 1),\r\n            roundType: \"champion\",\r\n            championReceived: false\r\n        };\r\n\r\n        props.onChampionDelete(deletedChampionData);\r\n    }\r\n\r\n    if (props.championData.championReceived) {\r\n        return (\r\n            <div className=\"champion-area\">\r\n                <h3 className=\"champion-title\">WINNER:</h3>\r\n                <h4>{props.championData.winnerTitle}</h4>\r\n                <p>by</p>\r\n                <h5>{props.championData.winnerBand}</h5>\r\n                <button className=\"delete-button-champion\" onClick={handleChampionDelete}>\r\n                    <DeleteIcon style={{\"fontSize\": 24}} />\r\n                </button>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div></div>\r\n    }\r\n}\r\n\r\nexport default ChampionArea;","import React, { useState } from \"react\";\r\nimport Semifinal from \"./Semifinal\";\r\nimport Final from \"./Final\";\r\nimport ChampionArea from \"./ChampionArea\";\r\n\r\nfunction LastRoundsArea(props) {\r\n    const [finalWinnerData, setFinalWinnerData] = useState({\r\n        winnerTitle: \"\",\r\n        winnerBand: \"\",\r\n        winnerTargetSpot: 0\r\n    });\r\n\r\n    function handleSemifinalWinnerData(data) {\r\n        props.onSemifinalDataReceived(data);\r\n    }\r\n\r\n    function handleFinalWinnerData(data) {\r\n        if (data.deletedData) {\r\n            props.onSemifinalDataReceived(data);\r\n        } else {\r\n            data.championReceived = true;\r\n\r\n            setFinalWinnerData(data);\r\n        };\r\n    }\r\n\r\n    function handleChampionDelete(data) {\r\n        setFinalWinnerData(data);\r\n    }\r\n\r\n    return (\r\n        <div className=\"last-rounds-area\">\r\n            <Semifinal\r\n                winnerDataToRender={props.lastRoundsData}\r\n                onLastRoundsWinnerDataReceived={handleSemifinalWinnerData}\r\n            />\r\n            <Final\r\n                finalData={props.lastRoundsData}\r\n                onLastRoundsWinnerDataReceived={handleFinalWinnerData}\r\n            />\r\n            <ChampionArea championData={finalWinnerData} onChampionDelete={handleChampionDelete} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LastRoundsArea;","import React from \"react\";\r\n\r\nfunction Footer() {\r\n    const currentYear = new Date().getFullYear();\r\n\r\n    return (\r\n        <footer>\r\n            <p className=\"footer-text\">Copyright Matthew Alvarado-Ross {currentYear}</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Board from \"./Board\";\r\nimport LastRoundsArea from \"./LastRoundsArea\";\r\nimport Footer from \"./Footer\"\r\nimport SaveAltIcon from '@material-ui/icons/SaveAlt';\r\nimport html2canvas from 'html2canvas';\r\n\r\nfunction App() {\r\n    const [lastRoundsData, setLastRoundsData] = useState({\r\n        winnerTitle: \"\",\r\n        winnerBand: \"\",\r\n        winnerTargetSpot: 0\r\n    });\r\n\r\n    function lastRoundsDataHandler(data) {\r\n        setLastRoundsData(data);\r\n    }\r\n\r\n    function handleSemifinalDataDeletion(data) {\r\n        setLastRoundsData(data);\r\n    }\r\n\r\n    function downloadScreenCapture() {\r\n        html2canvas(document.body).then(function(canvas) {\r\n            saveAs(canvas.toDataURL(), 'bracket-game.png');\r\n        });\r\n    }\r\n\r\n    function saveAs(uri, filename) {\r\n        var link = document.createElement(\"a\");\r\n\r\n        if (typeof link.download === \"string\") {\r\n            link.href = uri;\r\n            link.download = filename;\r\n\r\n            //Firefox requires the link to be in the body\r\n            document.body.appendChild(link);\r\n\r\n            //simulate click\r\n            link.click();\r\n\r\n            //remove the link when done\r\n            document.body.removeChild(link);\r\n        } else {\r\n            window.open(uri);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <Board onLastRoundsDataArrived={lastRoundsDataHandler} lastRoundsData={lastRoundsData} />\r\n            <LastRoundsArea lastRoundsData={lastRoundsData}  onSemifinalDataReceived={handleSemifinalDataDeletion} />\r\n            <button className=\"save-button\" onClick={downloadScreenCapture}>Save As Image <SaveAltIcon /></button>\r\n            <Footer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}